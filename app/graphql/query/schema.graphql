type Query {
  # User
  usersAdmin(option: Option!, condition: Condition): [User]
  userAdmin(id: ID!): User
  #userLogin(userLoginPayload: UserLoginPayload!): User!
  userRich(id: ID!): User!
  userLogin(userInput: UserInput!): result


  # userByToken(clientType: String!, accessToken: String!): User!

  circles(option: Option!, condition: Condition): [Circle!]
  circle(id: ID!): Circle!

  latestCourse(option: Option!): [Course]
  latestInformation(option: Option!): [Information]


  #speech
  speechGoogle(speechRequest: SpeechRequest): result

}